;
;
;#include <define.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;void question_01(int number,char portSelect, int delayTime){
; 0001 0006 void question_01(int number,char portSelect, int delayTime){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0007     count = 0;
;PCODE: $0000000F VOL: 0
;	number -> Y+3
;	portSelect -> Y+2
;	delayTime -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0001 0008 
; 0001 0009     while(count < number){
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 000A         switch(portSelect){
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 000B          case portA:
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 000C             DDRA = 0xFF;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0001 000D             PORTA = 0xFF;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 000E             delay_ms(delayTime);
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 000F             PORTA = 0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0010             delay_ms(delayTime);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0001 0011             break;
;PCODE: $00000025 VOL: 0
; 0001 0012 
; 0001 0013          case portB:
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0001 0014             DDRB = 0xFF;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 0015             PORTB = 0xFF;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0001 0016             delay_ms(delayTime);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0001 0017             PORTB = 0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 0018             delay_ms(delayTime);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0001 0019             break;
;PCODE: $00000033 VOL: 0
; 0001 001A 
; 0001 001B          case portC:
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0001 001C             DDRC = 0xFF;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0001 001D             PORTC = 0xFF;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0001 001E             delay_ms(delayTime);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0001 001F             PORTC = 0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 0020             delay_ms(delayTime);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0001 0021             break;
;PCODE: $00000041 VOL: 0
; 0001 0022 
; 0001 0023          case portD:
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0001 0024             DDRD = 0xFF;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 0025             PORTD = 0xFF;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0001 0026             delay_ms(delayTime);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0001 0027             PORTD = 0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0028             delay_ms(delayTime);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0029             break;
;PCODE: $0000004F VOL: 0
; 0001 002A 
; 0001 002B          default:
;PCODE: $00000050 VOL: 0
; 0001 002C             DDRD = 0xFF;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 002D             PORTD = 0xFF;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 002E             delay_ms(delayTime);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 002F             PORTD = 0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0030             delay_ms(delayTime);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 0031             break;
;PCODE: $0000005B VOL: 0
; 0001 0032      }
;PCODE: $0000005C VOL: 0
; 0001 0033          count++;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 0034     }
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0035 
; 0001 0036 }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;
;void question_02(int delayTime, int position){
; 0001 0038 void question_02(int delayTime, int position){
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0001 0039     char currentPosition;
; 0001 003A     DDRB = 0xFF;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;	delayTime -> Y+3
;	position -> Y+1
;	currentPosition -> R17
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0001 003B     count = 0;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0001 003C     currentPosition = position;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0001 003D     while(1){
;PCODE: $00000070 VOL: 0
; 0001 003E 
; 0001 003F             if (currentPosition == 0) {
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0001 0040                 PORTB = 0b00000001;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0001 0041                 delay_ms(delayTime);
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0001 0042                 currentPosition ++;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0001 0043                 count++;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0001 0044                 if (count == 16) break;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0001 0045             }
;PCODE: $00000081 VOL: 0
; 0001 0046 
; 0001 0047             if (currentPosition == 1) {
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0001 0048                 PORTB = 0b00000010;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0001 0049                 delay_ms(delayTime);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0001 004A                 currentPosition ++;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0001 004B                 count++;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0001 004C                 if (count == 16) break;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0001 004D             }
;PCODE: $00000094 VOL: 0
; 0001 004E 
; 0001 004F             if (currentPosition == 2) {
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0001 0050                 PORTB = 0b00000100;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0001 0051                 delay_ms(delayTime);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0001 0052                 currentPosition ++;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0001 0053                 count++;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0001 0054                 if (count == 16) break;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0001 0055             }
;PCODE: $000000A7 VOL: 0
; 0001 0056 
; 0001 0057             if (currentPosition == 3) {
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0001 0058                 PORTB = 0b00001000;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0001 0059                 delay_ms(delayTime);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0001 005A                 currentPosition ++;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0001 005B                 count++;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0001 005C                 if (count == 16) break;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0001 005D             }
;PCODE: $000000BA VOL: 0
; 0001 005E 
; 0001 005F             if (currentPosition == 4) {
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0001 0060                 PORTB = 0b00010000;
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0001 0061                 delay_ms(delayTime);
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0001 0062                 currentPosition ++;
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0001 0063                 count++;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0001 0064                 if (count == 16) break;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0001 0065             }
;PCODE: $000000CD VOL: 0
; 0001 0066 
; 0001 0067             if (currentPosition == 5) {
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0001 0068                 PORTB = 0b00100000;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0001 0069                 delay_ms(delayTime);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0001 006A                 currentPosition ++;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0001 006B                 count++;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0001 006C                 if (count == 16) break;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0001 006D 
; 0001 006E             }
;PCODE: $000000E0 VOL: 0
; 0001 006F 
; 0001 0070             if (currentPosition == 6) {
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0001 0071                 PORTB = 0b01000000;
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0001 0072                 delay_ms(delayTime);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0001 0073                 currentPosition ++;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0001 0074                 count++;
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0001 0075                 if (count == 16) break;
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0001 0076             }
;PCODE: $000000F3 VOL: 0
; 0001 0077 
; 0001 0078             if (currentPosition == 7) {
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0001 0079                 PORTB = 0b10000000;
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0001 007A                 delay_ms(delayTime);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0001 007B                 currentPosition = 0;
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0001 007C                 count++;
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
; 0001 007D                 if (count == 16) break;
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0001 007E             }
;PCODE: $00000106 VOL: 0
; 0001 007F 
; 0001 0080 
; 0001 0081 
; 0001 0082     }
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0001 0083 
; 0001 0084     PORTB = 0x00;
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0001 0085 }
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;
;
;void question_03(char outputPortSelect, char inputPortSelect){
; 0001 0088 void question_03(char outputPortSelect, char inputPortSelect){
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0001 0089     unsigned int temp;
; 0001 008A     count = 0;
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;	outputPortSelect -> Y+3
;	inputPortSelect -> Y+2
;	temp -> R16,R17
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0001 008B     temp = 0;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0001 008C 
; 0001 008D     while(1){
;PCODE: $0000011A VOL: 0
; 0001 008E         switch(inputPortSelect){
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0001 008F          case pinA:
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0001 0090             DDRA = 0x00;
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0001 0091             temp = PINA;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0001 0092             break;
;PCODE: $00000124 VOL: 0
; 0001 0093 
; 0001 0094          case pinB:
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
; 0001 0095             DDRB = 0x00;
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0001 0096             temp = PINB;
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0001 0097             break;
;PCODE: $0000012D VOL: 0
; 0001 0098 
; 0001 0099          case pinC:
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0001 009A             DDRC = 0x00;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0001 009B             temp = PINC;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0001 009C             break;
;PCODE: $00000136 VOL: 0
; 0001 009D 
; 0001 009E          case pinD:
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0001 009F             DDRD = 0x00;
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0001 00A0             temp = PIND;
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0001 00A1             break;
;PCODE: $0000013F VOL: 0
; 0001 00A2 
; 0001 00A3          default:
;PCODE: $00000140 VOL: 0
; 0001 00A4             DDRA = 0x00;
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0001 00A5             temp = PINA;
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
; 0001 00A6             break;
;PCODE: $00000146 VOL: 0
; 0001 00A7      }
;PCODE: $00000147 VOL: 0
; 0001 00A8 
; 0001 00A9 
; 0001 00AA         switch(outputPortSelect){
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0001 00AB          case portA:
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0001 00AC             DDRA = 0xFF;
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0001 00AD             PORTA = temp;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0001 00AE             break;
;PCODE: $00000150 VOL: 0
; 0001 00AF 
; 0001 00B0          case portB:
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0001 00B1             DDRB = 0xFF;
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0001 00B2             PORTB = temp;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0001 00B3             break;
;PCODE: $00000158 VOL: 0
; 0001 00B4 
; 0001 00B5          case portC:
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0001 00B6             DDRC = 0xFF;
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0001 00B7             PORTC = temp;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0001 00B8             break;
;PCODE: $00000160 VOL: 0
; 0001 00B9 
; 0001 00BA          case portD:
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0001 00BB             DDRD = 0xFF;
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0001 00BC             PORTD = temp;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0001 00BD             break;
;PCODE: $00000168 VOL: 0
; 0001 00BE 
; 0001 00BF          default:
;PCODE: $00000169 VOL: 0
; 0001 00C0             DDRB = 0xFF;
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0001 00C1             PORTB = temp;
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0001 00C2             break;
;PCODE: $0000016E VOL: 0
; 0001 00C3      }
;PCODE: $0000016F VOL: 0
; 0001 00C4 
; 0001 00C5    // count ++;
; 0001 00C6   //  if (count == 50) break;
; 0001 00C7 
; 0001 00C8     }
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0001 00C9 }
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;
;void question_04(int direction, int sevenSegOn){
; 0001 00CB void question_04(int direction, int sevenSegOn){
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0001 00CC     DDRD = 0x0F;
;PCODE: $0000017B VOL: 0
;	direction -> Y+2
;	sevenSegOn -> Y+0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0001 00CD     DDRC = 0xFF;
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0001 00CE 
; 0001 00CF     switch(sevenSegOn){
;PCODE: $00000180 VOL: 0
; 0001 00D0         case allSevenSegOn:
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0001 00D1             PORTD = 0x00;
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0001 00D2             break;
;PCODE: $00000185 VOL: 0
; 0001 00D3         case firstSevenSegOn:
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0001 00D4             PORTD = 0b00001110;
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0001 00D5             break;
;PCODE: $0000018B VOL: 0
; 0001 00D6         case secondSevenSegOn:
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0001 00D7             PORTD = 0b00001101;
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0001 00D8             break;
;PCODE: $00000191 VOL: 0
; 0001 00D9         case thirdSevenSegOn:
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0001 00DA             PORTD = 0b00001011;
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0001 00DB             break;
;PCODE: $00000197 VOL: 0
; 0001 00DC         case fourthSevenSegOn:
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0001 00DD             PORTD = 0b00000111;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0001 00DE             break;
;PCODE: $0000019D VOL: 0
; 0001 00DF         default:
;PCODE: $0000019E VOL: 0
; 0001 00E0             PORTD = 0x00;
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
; 0001 00E1             break;
;PCODE: $000001A1 VOL: 0
; 0001 00E2     }
;PCODE: $000001A2 VOL: 0
; 0001 00E3 
; 0001 00E4 
; 0001 00E5     if (direction == decrease){
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0001 00E6         for (count = 9; count >= 0; count--){
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0001 00E7          PORTC = sevenSeg[count];
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0001 00E8          delay_ms(500);
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0001 00E9         }
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0001 00EA     }
; 0001 00EB     if (direction == increase){
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0001 00EC         for (count = 0; count <= 9; count++){
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0001 00ED          PORTC = sevenSeg[count];
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0001 00EE          delay_ms(500);
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0001 00EF         }
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0001 00F0     }
; 0001 00F1 
; 0001 00F2 }
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;
;
;
;void question_05(int amountOfReduction) {
; 0001 00F6 void question_05(int amountOfReduction) {
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0001 00F7      int temp;
; 0001 00F8      unsigned int firstSevenSeg;
; 0001 00F9      unsigned int secondSevenSeg;
; 0001 00FA      unsigned int thirdSevenSeg;
; 0001 00FB      unsigned int fourthSevenSeg;
; 0001 00FC 
; 0001 00FD      if (amountOfReduction != 1 && amountOfReduction != 2 && amountOfReduction != 5){ //error handling
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;	amountOfReduction -> Y+10
;	temp -> R16,R17
;	firstSevenSeg -> R18,R19
;	secondSevenSeg -> R20,R21
;	thirdSevenSeg -> Y+8
;	fourthSevenSeg -> Y+6
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0001 00FE         amountOfReduction = 5;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0001 00FF      }
; 0001 0100 
; 0001 0101      DDRA = 0x00;
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
; 0001 0102      DDRD = 0x0F;
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0001 0103      DDRC = 0xFF;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0001 0104      count = 0;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0001 0105      temp = 0;
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0001 0106 
; 0001 0107      fourthSevenSeg = 0;
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0001 0108      thirdSevenSeg = PINA%10;
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0001 0109      temp = PINA/10;
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0001 010A      secondSevenSeg = temp%10;
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0001 010B      temp = temp/10;
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0001 010C      firstSevenSeg = temp%10;
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
; 0001 010D 
; 0001 010E      while(1) {
;PCODE: $0000021B VOL: 0
; 0001 010F 
; 0001 0110          PORTC = sevenSeg[fourthSevenSeg];
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0001 0111          delay_ms(4);
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0001 0112          PORTD = 0x08;
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0001 0113          PORTC = sevenSeg[thirdSevenSeg]+0x80 ;
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0001 0114          delay_ms(4);
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0001 0115          PORTD = 0x04;
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0001 0116          PORTC = sevenSeg[secondSevenSeg];
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0001 0117          delay_ms(4);
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0001 0118          PORTD = 0x02;
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0001 0119          PORTC = sevenSeg[firstSevenSeg];
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0001 011A          delay_ms(4);
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0001 011B          PORTD = 0x01;
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0001 011C 
; 0001 011D          count += 1;
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0001 011E          if (count == 15) {
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0001 011F             if (fourthSevenSeg == 0){
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0001 0120                  fourthSevenSeg = 10;
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0001 0121                  if (thirdSevenSeg == 0){
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0001 0122                     thirdSevenSeg = 9;
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0001 0123                     if (secondSevenSeg == 0){
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0001 0124                         secondSevenSeg = 9;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0001 0125                         if (firstSevenSeg != 0) firstSevenSeg --;
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0001 0126                     }
;PCODE: $00000261 VOL: 0
; 0001 0127                     else secondSevenSeg --;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0001 0128                  }
;PCODE: $00000266 VOL: 0
; 0001 0129                  else thirdSevenSeg --;
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0001 012A             }
;PCODE: $0000026C VOL: 0
; 0001 012B 
; 0001 012C             fourthSevenSeg -= amountOfReduction;
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0001 012D             count = 0;
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0001 012E          }
; 0001 012F 
; 0001 0130          if (fourthSevenSeg == 0 && thirdSevenSeg == 0 && secondSevenSeg == 0&& firstSevenSeg == 0) break;
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0001 0131      }
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0001 0132 }
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
