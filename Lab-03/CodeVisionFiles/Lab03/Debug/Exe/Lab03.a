;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/8/2020
;Author  : Arman Riasi
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;#include <define.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;unsigned char tempForKeyPadEntry;
;unsigned char myKeyPad[4][4] = {
;'0','1','2','3',
;'4','5','6','7',
;'8','9','A','B',
;'C','D','E','F'
;};

	.DSEG
;
;// External Interrupt 1 service routine
;interrupt [EXT_INT1] void myInterrupt(void)
; 0000 0024 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0025 
; 0000 0026         DDRC = 0x01;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0027         PORTC = 0x01;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0028         DDRB = 0xF0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0029         PORTB = 0xFF;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002A         keyPad();
;PCODE: $00000017 VOL: 0
; 0000 002B         DDRB = 0xF0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 002C         PORTB = 0xFF;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002D         PORTC = 0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 002E 
; 0000 002F }
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;
;void main(void){
; 0000 0031 void main(void){
;PCODE: $00000021 VOL: 0
; 0000 0032     ioInit();
;PCODE: $00000022 VOL: 0
; 0000 0033     interruptInit();
;PCODE: $00000023 VOL: 0
; 0000 0034     lcd_init(16);  // Alphanumeric LCD initialization
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0035 
; 0000 0036 
; 0000 0037     //question_01();
; 0000 0038     //question_02();
; 0000 0039     //question_03();
; 0000 003A     //question_04();
; 0000 003B     //question_05();
; 0000 003C 
; 0000 003D 
; 0000 003E     //FOR Question 06:
; 0000 003F     question_01();
;PCODE: $00000026 VOL: 0
; 0000 0040     question_02();
;PCODE: $00000027 VOL: 0
; 0000 0041     question_03();
;PCODE: $00000028 VOL: 0
; 0000 0042     question_05();
;PCODE: $00000029 VOL: 0
; 0000 0043             lcd_clear();
;PCODE: $0000002A VOL: 0
; 0000 0044             lcd_gotoxy(0,0);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0045             lcd_puts("Question 4");
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0046             delay_ms(500);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0047             lcd_clear();
;PCODE: $00000034 VOL: 0
; 0000 0048     question_04();
;PCODE: $00000035 VOL: 0
; 0000 0049 
; 0000 004A }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0

	.DSEG
_0x4:
	.BYTE 0xB
