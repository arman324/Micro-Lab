;#include <define.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;void question_01(){
; 0001 0003 void question_01(){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 0004     //lcd_init(16);  // Alphanumeric LCD initialization
; 0001 0005     lcd_clear();
;PCODE: $0000000F VOL: 0
; 0001 0006     lcd_gotoxy(0,0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0001 0007     lcd_puts("Arman Riasi");
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 0008     lcd_gotoxy(0,1);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0001 0009     lcd_putsf("9638283");
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0001 000A     delay_ms(2200);
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0001 000B }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0

	.DSEG
_0x20003:
	.BYTE 0xC
;
;void question_02(){
; 0001 000D void question_02(){

	.CSEG
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0001 000E     char *myMsg = "Welcome to the online lab classes due to Corona disease.";
; 0001 000F     char *MsgOnTheLCD = "";
; 0001 0010     char *space = "                ";
; 0001 0011     int i = 0;
; 0001 0012     lcd_clear();
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;	*myMsg -> R16,R17
;	*MsgOnTheLCD -> R18,R19
;	*space -> R20,R21
;	i -> Y+6
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0001 0013 
; 0001 0014     lcd_gotoxy(0,1);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0001 0015     lcd_puts(space);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 0016 
; 0001 0017     lcd_clear();
;PCODE: $0000003A VOL: 0
; 0001 0018         for (i = 0; i < strlen(myMsg); i++){
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0001 0019             lcd_clear();
;PCODE: $00000047 VOL: 0
; 0001 001A             lcd_gotoxy(0,0);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0001 001B             strncpy(MsgOnTheLCD,myMsg+i,16);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0001 001C             lcd_puts(MsgOnTheLCD);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0001 001D             if (i == 0) delay_ms(750);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 001E             delay_ms(140);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 001F             lcd_gotoxy(0,1);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 0020 
; 0001 0021             lcd_puts(space);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0022         }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 0023 
; 0001 0024 
; 0001 0025 }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0

	.DSEG
_0x20004:
	.BYTE 0x4B
;
;
;void keyPad(){
; 0001 0028 void keyPad(){

	.CSEG
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0001 0029     unsigned char row;
; 0001 002A     unsigned char column;
; 0001 002B     DDRB = 0xF0;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;	row -> R17
;	column -> R16
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0001 002C     PORTB = 0xFF;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0001 002D 
; 0001 002E 
; 0001 002F         while(1){
;PCODE: $00000075 VOL: 0
; 0001 0030             PORTB = 0b11111111;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0001 0031             column = (PINB & 0b00001111);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0001 0032             if (column != 0b00000000) break;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0001 0033         }
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0001 0034 
; 0001 0035          while(1){
;PCODE: $00000081 VOL: 0
; 0001 0036             PORTB = 0b11111111;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0001 0037             column= (PINB & 0b00001111);
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0001 0038             if (column == 0b00000000) break;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0001 0039         }
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0001 003A 
; 0001 003B 
; 0001 003C         while(1){
;PCODE: $0000008D VOL: 0
; 0001 003D             while (1) {
;PCODE: $0000008E VOL: 0
; 0001 003E                 delay_ms(25);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0001 003F                 column = (PINB & 0b00001111);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0001 0040                 if (column == 0b00000000) break;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0001 0041             }
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0001 0042 
; 0001 0043             delay_ms(25);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0001 0044             column = (PINB & 0b00001111);
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0001 0045             if(column != 0b00000000) break;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0001 0046         }
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0001 0047 
; 0001 0048         while (1){
;PCODE: $000000A7 VOL: 0
; 0001 0049             PORTB = 0b00011111;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0001 004A             column = (PINB & 0b00001111);
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0001 004B 
; 0001 004C             if (column != 0b00000000)
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0001 004D             {
; 0001 004E                 row = 0;
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0001 004F                 break;
;PCODE: $000000B1 VOL: 0
; 0001 0050             }
; 0001 0051 
; 0001 0052             PORTB = 0b00101111;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0001 0053             column = (PINB & 0b00001111);
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0001 0054 
; 0001 0055             if (column != 0b00000000)
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0001 0056             {
; 0001 0057                 row = 1;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0001 0058                 break;
;PCODE: $000000BC VOL: 0
; 0001 0059             }
; 0001 005A 
; 0001 005B             PORTB = 0b01001111;
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0001 005C             column = (PINB & 0b00001111);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0001 005D 
; 0001 005E             if (column != 0b00000000)
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
; 0001 005F             {
; 0001 0060                 row = 2;
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0001 0061                 break;
;PCODE: $000000C7 VOL: 0
; 0001 0062             }
; 0001 0063 
; 0001 0064             PORTB = 0b10001111;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0001 0065             column = (PINB & 0b00001111);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0001 0066 
; 0001 0067             if (column != 0b00000000)
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0001 0068             {
; 0001 0069                 row = 3;
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0001 006A                 break;
;PCODE: $000000D2 VOL: 0
; 0001 006B             }
; 0001 006C         }
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0001 006D 
; 0001 006E         switch (column) {
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0001 006F             case 0b00000001:
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0001 0070                 lcd_putchar(myKeyPad[row][0]);
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0001 0071                 tempForKeyPadEntry = myKeyPad[row][0];
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0001 0072                 break;
;PCODE: $000000E8 VOL: 0
; 0001 0073             case 0b00000010:
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0001 0074                 lcd_putchar(myKeyPad[row][1]);
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0001 0075                 tempForKeyPadEntry = myKeyPad[row][1];
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0001 0076                 break;
;PCODE: $000000FA VOL: 0
; 0001 0077             case 0b00000100:
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0001 0078                 lcd_putchar(myKeyPad[row][2]);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0001 0079                 tempForKeyPadEntry = myKeyPad[row][2];
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0001 007A                 break;
;PCODE: $0000010C VOL: 0
; 0001 007B             case 0b00001000:
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0001 007C                 lcd_putchar(myKeyPad[row][3]);
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
; 0001 007D                 tempForKeyPadEntry = myKeyPad[row][3];
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0001 007E                 break;
;PCODE: $0000011E VOL: 0
; 0001 007F         }
;PCODE: $0000011F VOL: 0
; 0001 0080 
; 0001 0081 
; 0001 0082 }
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;
;
;void question_03(){
; 0001 0085 void question_03(){
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0001 0086         unsigned int counter = 0;
; 0001 0087         lcd_clear();
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;	counter -> R16,R17
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0001 0088         lcd_gotoxy(0,0);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
; 0001 0089         lcd_puts("Question 3:");
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0001 008A         delay_ms(500);
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0001 008B         lcd_clear();
;PCODE: $00000133 VOL: 0
; 0001 008C         lcd_gotoxy(0,0);
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0001 008D       while(1){
;PCODE: $00000138 VOL: 0
; 0001 008E         if (counter == 3) break;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0001 008F         keyPad();
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0001 0090         counter++;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
; 0001 0091       }
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
; 0001 0092 }
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0

	.DSEG
_0x20027:
	.BYTE 0xC
;
;void question_04(){
; 0001 0094 void question_04(){

	.CSEG
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
; 0001 0095             DDRB = 0xF0;
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
; 0001 0096             PORTB = 0xFF;
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0001 0097             #asm("sei")     // Global enable interrupts
;PCODE: $0000014C VOL: 0
	sei
;PCODE: $0000014D VOL: 0
; 0001 0098 
; 0001 0099 }
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;
;void question_05(){
; 0001 009B void question_05(){
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0001 009C         unsigned char keyPadFirstEntry;
; 0001 009D         unsigned char keyPadSecondEntry;
; 0001 009E 
; 0001 009F         lcd_clear();
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;	keyPadFirstEntry -> R17
;	keyPadSecondEntry -> R16
;PCODE: $00000154 VOL: 0
; 0001 00A0         lcd_gotoxy(0,0);
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
; 0001 00A1         lcd_puts("Enter number forSPEED(0-50): ");
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0001 00A2         keyPad();
;PCODE: $0000015C VOL: 0
; 0001 00A3         keyPadFirstEntry = tempForKeyPadEntry;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0001 00A4         keyPad();
;PCODE: $0000015F VOL: 0
; 0001 00A5         keyPadSecondEntry = tempForKeyPadEntry;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0001 00A6         delay_ms(50);
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0001 00A7         if(keyPadFirstEntry > '5' || keyPadSecondEntry > '9' || keyPadFirstEntry < '0' || (keyPadFirstEntry == '5' && ke ...
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0001 00A8             lcd_clear();
;PCODE: $00000178 VOL: 0
; 0001 00A9             lcd_gotoxy(0,0);
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0001 00AA             lcd_puts("SPEED EE for ");
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0001 00AB             lcd_putchar(keyPadFirstEntry);
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0001 00AC             lcd_putchar(keyPadSecondEntry);
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0001 00AD         }
; 0001 00AE         else {
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0001 00AF             lcd_clear();
;PCODE: $00000186 VOL: 0
; 0001 00B0             lcd_gotoxy(0,0);
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0001 00B1             lcd_puts("Set successfully");
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0001 00B2             lcd_putchar(keyPadFirstEntry);
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0001 00B3             lcd_putchar(keyPadSecondEntry);
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0001 00B4         }
;PCODE: $00000192 VOL: 0
; 0001 00B5 
; 0001 00B6         delay_ms(1400);
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0001 00B7 
; 0001 00B8         lcd_clear();
;PCODE: $00000195 VOL: 0
; 0001 00B9         lcd_gotoxy(0,0);
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0001 00BA         lcd_puts("Enter number forTIME(0-99s): ");
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0001 00BB         keyPad();
;PCODE: $0000019D VOL: 0
; 0001 00BC         keyPadFirstEntry = tempForKeyPadEntry;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0001 00BD         keyPad();
;PCODE: $000001A0 VOL: 0
; 0001 00BE         keyPadSecondEntry = tempForKeyPadEntry;
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0001 00BF         delay_ms(50);
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0001 00C0         if(keyPadFirstEntry > '9' || keyPadSecondEntry > '9'){
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0001 00C1             lcd_clear();
;PCODE: $000001AE VOL: 0
; 0001 00C2             lcd_gotoxy(0,0);
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0001 00C3             lcd_puts("TIME EE for ");
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0001 00C4             lcd_putchar(keyPadFirstEntry);
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0001 00C5             lcd_putchar(keyPadSecondEntry);
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0001 00C6         }
; 0001 00C7         else {
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0001 00C8             lcd_clear();
;PCODE: $000001BC VOL: 0
; 0001 00C9             lcd_gotoxy(0,0);
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0001 00CA             lcd_puts("Set successfully");
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0001 00CB             lcd_putchar(keyPadFirstEntry);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0001 00CC             lcd_putchar(keyPadSecondEntry);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0001 00CD         }
;PCODE: $000001C8 VOL: 0
; 0001 00CE 
; 0001 00CF         delay_ms(1400);
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0001 00D0 
; 0001 00D1         lcd_clear();
;PCODE: $000001CB VOL: 0
; 0001 00D2         lcd_gotoxy(0,0);
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0001 00D3         lcd_puts("Enter number forWEIGHT(0-99F): ");
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0001 00D4         keyPad();
;PCODE: $000001D3 VOL: 0
; 0001 00D5         keyPadFirstEntry = tempForKeyPadEntry;
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0001 00D6         keyPad();
;PCODE: $000001D6 VOL: 0
; 0001 00D7         keyPadSecondEntry = tempForKeyPadEntry;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0001 00D8         delay_ms(50);
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0001 00D9         if(keyPadFirstEntry > '9' || keyPadSecondEntry > '9'){
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0001 00DA             lcd_clear();
;PCODE: $000001E4 VOL: 0
; 0001 00DB             lcd_gotoxy(0,0);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0001 00DC             lcd_puts("WEIGHT EE for ");
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0001 00DD             lcd_putchar(keyPadFirstEntry);
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0001 00DE             lcd_putchar(keyPadSecondEntry);
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0001 00DF         }
; 0001 00E0         else {
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0001 00E1             lcd_clear();
;PCODE: $000001F2 VOL: 0
; 0001 00E2             lcd_gotoxy(0,0);
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0001 00E3             lcd_puts("Set successfully");
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0001 00E4             lcd_putchar(keyPadFirstEntry);
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0001 00E5             lcd_putchar(keyPadSecondEntry);
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0001 00E6         }
;PCODE: $000001FE VOL: 0
; 0001 00E7 
; 0001 00E8         delay_ms(1400);
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0001 00E9 
; 0001 00EA         lcd_clear();
;PCODE: $00000201 VOL: 0
; 0001 00EB         lcd_gotoxy(0,0);
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0001 00EC         lcd_puts("Enter number forTEMP(20-80C): ");
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0001 00ED         keyPad();
;PCODE: $00000209 VOL: 0
; 0001 00EE         keyPadFirstEntry = tempForKeyPadEntry;
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0001 00EF         keyPad();
;PCODE: $0000020C VOL: 0
; 0001 00F0         keyPadSecondEntry = tempForKeyPadEntry;
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0001 00F1         delay_ms(50);
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0001 00F2         if(keyPadFirstEntry > '8' || keyPadSecondEntry > '9' || keyPadFirstEntry < '2' || (keyPadFirstEntry == '8' && ke ...
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
; 0001 00F3             lcd_clear();
;PCODE: $00000225 VOL: 0
; 0001 00F4             lcd_gotoxy(0,0);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0001 00F5             lcd_puts("TEMP EE for ");
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0001 00F6             lcd_putchar(keyPadFirstEntry);
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0001 00F7             lcd_putchar(keyPadSecondEntry);
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0001 00F8         }
; 0001 00F9         else {
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0001 00FA             lcd_clear();
;PCODE: $00000233 VOL: 0
; 0001 00FB             lcd_gotoxy(0,0);
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0001 00FC             lcd_puts("Set successfully");
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0001 00FD             lcd_putchar(keyPadFirstEntry);
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0001 00FE             lcd_putchar(keyPadSecondEntry);
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0001 00FF         }
;PCODE: $0000023F VOL: 0
; 0001 0100 
; 0001 0101         delay_ms(1400);
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
; 0001 0102 
; 0001 0103 }
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0

	.DSEG
_0x2002C:
	.BYTE 0xF6
;
;
;void ioInit(){
; 0001 0106 void ioInit(){

	.CSEG
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
; 0001 0107     // Input/Output Ports initialization
; 0001 0108     // Port A initialization
; 0001 0109     // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0001 010A     DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0001 010B     // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0001 010C     PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0001 010D 
; 0001 010E 
; 0001 010F 
; 0001 0110 
; 0001 0111 }
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;
;void interruptInit(){
; 0001 0113 void interruptInit(){
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0001 0114 
; 0001 0115     // External Interrupt(s) initialization
; 0001 0116     // INT0: Off
; 0001 0117     // INT1: On
; 0001 0118     // INT1 Mode: Rising Edge
; 0001 0119     // INT2: Off
; 0001 011A 
; 0001 011B     GICR|=(1<<INT1) | (0<<INT0) | (0<<INT2);
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0001 011C     MCUCR=(1<<ISC11) | (1<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0001 011D     MCUCSR=(0<<ISC2);
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0001 011E     GIFR=(1<<INTF1) | (0<<INTF0) | (0<<INTF2);
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0001 011F 
; 0001 0120 
; 0001 0121 }
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;
;
